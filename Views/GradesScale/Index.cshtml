@model IEnumerable<lista_7.Models.GradeScale>
@{
    ViewData["Title"] = "Index";
}

<h1>GradesScales List</h1>
<div class="container border">
    <a class="btn btn-success text-white" asp-controller="GradesScale" asp-action="Create">Craete</a>
@if (Model.Count() > 0)
{
    <table class="table table-striped border">
        <tr class="table-secondary">
            <th>
                <label>UpBorder</label>
            </th>
            <th>
                <label>DownBorder</label>
            </th>
            <th>
                <label>AllowedHalfGrades</label>
            </th>
            <th>

            </th>
        </tr>
        <tr>
            @foreach (var gs in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(g => gs.UpBorder)
                    </td>
                    <td>
                        @Html.DisplayFor(g => gs.DownBorder)
                    </td>
                    <td>
                        @if (gs.AllowHalfGrades.ToString() == "1") { <b>Yes</b>}
                        else
                        {
                            <b>No</b>
                        }
                    </td>
                    <td>
                        <button onclick="if(confirm('Are you sure you want to delete?'))location.href='@Url.Action("Delete", "GradesScale", new { id = gs.Id })'" class="btn btn-danger btn-sm">Delete</button>
                        <a asp-area="" asp-controller="GradesScale" asp-action="Edit" asp-route-id="@gs.Id" class="btn btn-success btn-sm text-white">Edit</a>
                    </td>
                </tr>
            }
        </tr>
    </table>
}
else
{
    <p class="text-warning"><b>Nothing to show!</b></p>
}
</div>


